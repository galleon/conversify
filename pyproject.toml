[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "conversify"
version = "0.1.0"
description = "Conversify is a real-time, low-latency, voice- and vision-enabled AI assistant built on LiveKit."
authors = [{name = "Taresh"}]
readme = "README.md"
requires-python = ">=3.11"
license = "Apache-2.0"
dependencies = [
    "aiohttp>=3.9,<4",
    "faster-whisper>=1.2.0",
    "livekit-agents[turn-detector]==1.2.6",
    "livekit-plugins-noise-cancellation==0.2.5",
    "livekit-plugins-openai==0.11.0",
    "livekit-plugins-silero==1.2.6",
    "livekit-plugins-simli==1.2.6",
    "livekit-plugins-turn-detector==1.2.6",
    "memoripy>=0.1.2",
    "python-dotenv>=1.1.1",
    "soundfile>=0.13.1",
    # FastAPI and server dependencies
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    # File processing dependencies
    "PyPDF2>=3.0.0",
    "python-docx>=1.1.0",
    "docx2txt>=0.8",
    "openpyxl>=3.1.0",
    "xlrd>=2.0.0",
    "striprtf>=0.0.26",
    "python-multipart>=0.0.6",
]

[project.optional-dependencies]
openai-whisper = ["openai-whisper>=20231117"]

[tool.setuptools]
packages = ["conversify"]

[tool.uv]
dev-dependencies = [
    "numpy>=1.26.4",
    "pytest>=8.4.1",
    "pytest-asyncio>=1.1.0",
    "ruff>=0.1.0",
    "pre-commit>=3.6.0",
    "mypy>=1.8.0",
    "bandit[toml]>=1.7.5",
    "safety>=3.0.0",
]

[tool.ruff]
# Target Python 3.11+
target-version = "py311"
line-length = 88
indent-width = 4

# Exclude directories
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "logs",
    "hf-cache",
    "ollama_data",
]

[tool.ruff.lint]
# Enable specific rule sets
select = [
    "E",     # pycodestyle errors
    "W",     # pycodestyle warnings
    "F",     # pyflakes
    "I",     # isort
    "B",     # flake8-bugbear
    "C4",    # flake8-comprehensions
    "UP",    # pyupgrade
    "N",     # pep8-naming
    "SIM",   # flake8-simplify
    "RUF",   # ruff-specific rules
]

# Ignore specific rules
ignore = [
    "E501",  # line too long (handled by formatter)
    "B008",  # do not perform function calls in argument defaults
    "N803",  # argument name should be lowercase (conflicts with some APIs)
    "N806",  # variable in function should be lowercase (conflicts with some APIs)
]

[tool.ruff.lint.per-file-ignores]
# Tests can use assert statements and have longer lines
"tests/**/*.py" = ["B011"]
# Allow unused imports in __init__.py files
"**/__init__.py" = ["F401"]

[tool.ruff.lint.isort]
# Group imports
known-first-party = ["conversify"]
force-single-line = false
combine-as-imports = true

[tool.ruff.format]
# Use double quotes for strings
quote-style = "double"
# Indent with spaces
indent-style = "space"
# Respect magic trailing comma
skip-magic-trailing-comma = false
# Auto-detect line endings
line-ending = "auto"

[tool.mypy]
# MyPy type checking configuration (initially relaxed for gradual adoption)
python_version = "3.11"
warn_return_any = false
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = false
disallow_untyped_decorators = false
no_implicit_optional = false
warn_redundant_casts = false
warn_unused_ignores = false
warn_no_return = false
warn_unreachable = false
strict_equality = false
ignore_missing_imports = true
explicit_package_bases = true
show_error_codes = true

# Exclude specific directories
exclude = [
    "build/",
    "dist/",
    ".venv/",
    "venv/",
    "tests/",
    "scripts/",
]

[tool.bandit]
# Bandit security linter configuration
exclude_dirs = ["tests", "scripts", ".venv", "venv", "build", "dist"]
skips = ["B101", "B601"]  # Skip assert_used and shell_injection_process_substitution

[tool.bandit.assert_used]
skips = ["*_test.py", "*/test_*.py"]
